#ESP32
#include <WiFi.h>
#include <PubSubClient.h>

const char* ssid = "‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ Wi-Fi";
const char* password = "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô Wi-Fi";
const char* mqtt_server = "192.168.1.100";  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô IP ‡∏Ç‡∏≠‡∏á Raspberry Pi 5
const char* topic = "arduino/command";

const int motorPin = 5;  // ‡πÉ‡∏ä‡πâ GPIO5 ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå
const int ledPin = 2;    // ‡πÉ‡∏ä‡πâ GPIO2 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LED ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞

WiFiClient espClient;
PubSubClient client(espClient);

void setup() {
  Serial.begin(115200);
  pinMode(ledPin, OUTPUT);
  pinMode(motorPin, OUTPUT);

  connect_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

void connect_wifi() {
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
}

void callback(char* topic, byte* payload, unsigned int length) {
  String command = "";
  for (int i = 0; i < length; i++) {
    command += (char)payload[i];
  }
  Serial.println("Received command: " + command);

  if (command == "MOTOR_ON") {
    digitalWrite(motorPin, HIGH);
    digitalWrite(ledPin, HIGH);
    Serial.println("üöÄ Motor ON");
  } else if (command == "MOTOR_OFF") {
    digitalWrite(motorPin, LOW);
    digitalWrite(ledPin, LOW);
    Serial.println("üõë Motor OFF");
  }
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
}

void reconnect() {
  while (!client.connected()) {
    if (client.connect("ESP32Client")) {
      client.subscribe(topic);
    } else {
      delay(5000);
    }
  }
}